{"ast":null,"code":"var _jsxFileName = \"/Users/amitalkobi/GitHub/epicure-client/src/components/AddEdit/AddEditRest.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport Input from \"@mui/material/Input\";\nimport Button from \"@mui/material/Button\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport axios from \"axios\";\nimport \"./AddEdit.scss\";\nimport { Box } from \"@mui/system\";\nimport { FormControl, InputLabel } from \"@mui/material\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddEditRest = () => {\n  _s();\n\n  const id = window.location.pathname.split(\"/\")[3];\n  const isAddMode = !id;\n  const [chefs, setChefs] = useState([]);\n  const navigate = useNavigate();\n  const {\n    control,\n    handleSubmit,\n    register,\n    reset,\n    setValue,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      name: \"\",\n      pic: \"\",\n      chef: \"\"\n    },\n    mode: \"all\"\n  });\n\n  const createQueryString = rest => {\n    return Object.keys(rest).map(key => {\n      let val = rest[key];\n      if (val !== null && typeof val === \"object\") val = createQueryString(val);\n      return `${key}=${encodeURIComponent(`${val}`.replace(/\\s/g, \" \"))}`;\n    }).join(\"&\");\n  };\n\n  const onSubmit = rest => {\n    const qs = createQueryString(rest);\n    isAddMode ? createRest(qs) : updateRest(id, qs);\n    navigate(\"/admin\");\n  };\n\n  const createRest = rest => {\n    (async () => {\n      const headers = {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      };\n      await axios.post(\"http://ec2-3-132-215-69.us-east-2.compute.amazonaws.com/api/v1/restaurants\", rest, {\n        headers: headers\n      });\n    })();\n  };\n\n  const updateRest = (id, rest) => {\n    (async () => {\n      const headers = {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      };\n      await axios.put(\"http://ec2-3-132-215-69.us-east-2.compute.amazonaws.com/api/v1/restaurants/\" + id, rest, {\n        headers: headers\n      });\n    })();\n  };\n\n  useEffect(() => {\n    (async () => {\n      const chefs = await axios(\"http://ec2-3-132-215-69.us-east-2.compute.amazonaws.com/api/v1/chefs\");\n      setChefs(chefs.data);\n    })();\n  }, []);\n  useEffect(() => {\n    if (!isAddMode) {\n      (async () => {\n        const res = await axios(\"http://ec2-3-132-215-69.us-east-2.compute.amazonaws.com/api/v1/restaurants/\" + id);\n        const fields = [\"name\", \"pic\"];\n        fields.forEach(field => setValue(field, res.data[field]));\n        setValue(\"chef\", res.data.chef.name);\n      })();\n    }\n  }, [id, isAddMode, setValue]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    onReset: reset,\n    className: \"rest-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isAddMode ? \"Add Restaurant\" : \"Edit Restaurant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"name\",\n            control: control,\n            rules: {\n              required: true,\n              maxLength: 20\n            },\n            render: () => /*#__PURE__*/_jsxDEV(Input, { ...register(\"name\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), errors.name && errors.name.type === \"required\" && /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"alert\",\n          className: \"input-error\",\n          children: \"Name is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), errors.name && errors.name.type === \"maxLength\" && /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"alert\",\n          className: \"input-error\",\n          children: \"Name length should be less than 20 characters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Picture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"pic\",\n            control: control,\n            rules: {\n              required: true\n            },\n            render: () => /*#__PURE__*/_jsxDEV(Input, { ...register(\"pic\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), errors.pic && errors.pic.type === \"required\" && /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"alert\",\n          className: \"input-error\",\n          children: \"Picture is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Chef\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"chef\",\n            control: control,\n            rules: {\n              required: true\n            },\n            render: () => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                minWidth: 165\n              },\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"demo-simple-select-label\",\n                  children: \"Chef\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Select, { ...register(\"chef\"),\n                  labelId: \"demo-simple-select-label\",\n                  id: \"demo-simple-select\",\n                  label: \"Chef\",\n                  children: chefs.map((chef, index) => {\n                    return /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: chef,\n                      children: chef.name\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 172,\n                      columnNumber: 27\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), errors.chef && errors.chef.type === \"required\" && /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"alert\",\n          className: \"input-error\",\n          children: \"Chef is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-button-cont\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddEditRest, \"GuzJa8k217bsae+mlK/J5z2qYPQ=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c = AddEditRest;\nexport default AddEditRest;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditRest\");","map":{"version":3,"sources":["/Users/amitalkobi/GitHub/epicure-client/src/components/AddEdit/AddEditRest.tsx"],"names":["React","useEffect","useState","Controller","useForm","Input","Button","Select","MenuItem","axios","Box","FormControl","InputLabel","useNavigate","AddEditRest","id","window","location","pathname","split","isAddMode","chefs","setChefs","navigate","control","handleSubmit","register","reset","setValue","formState","errors","defaultValues","name","pic","chef","mode","createQueryString","rest","Object","keys","map","key","val","encodeURIComponent","replace","join","onSubmit","qs","createRest","updateRest","headers","post","put","data","res","fields","forEach","field","required","maxLength","type","minWidth","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport Input from \"@mui/material/Input\";\nimport Button from \"@mui/material/Button\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport axios from \"axios\";\nimport \"./AddEdit.scss\";\nimport { Box } from \"@mui/system\";\nimport { FormControl, InputLabel } from \"@mui/material\";\nimport { useNavigate } from \"react-router\";\n\nconst AddEditRest = () => {\n  const id = window.location.pathname.split(\"/\")[3];\n  const isAddMode = !id;\n  const [chefs, setChefs] = useState<any>([]);\n  const navigate = useNavigate();\n\n  const {\n    control,\n    handleSubmit,\n    register,\n    reset,\n    setValue,\n    formState: { errors },\n  }: any = useForm({\n    defaultValues: {\n      name: \"\",\n      pic: \"\",\n      chef: \"\",\n    },\n    mode: \"all\",\n  });\n\n  const createQueryString = (rest: any) => {\n    return Object.keys(rest)\n      .map((key) => {\n        let val = rest[key];\n        if (val !== null && typeof val === \"object\")\n          val = createQueryString(val);\n        return `${key}=${encodeURIComponent(`${val}`.replace(/\\s/g, \" \"))}`;\n      })\n      .join(\"&\");\n  };\n\n  const onSubmit = (rest: any) => {\n    const qs = createQueryString(rest);\n    isAddMode ? createRest(qs) : updateRest(id, qs);\n    navigate(\"/admin\");\n  };\n\n  const createRest = (rest: any) => {\n    (async () => {\n      const headers = {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      };\n\n      await axios.post(\n        \"http://ec2-3-132-215-69.us-east-2.compute.amazonaws.com/api/v1/restaurants\",\n        rest,\n        {\n          headers: headers,\n        }\n      );\n    })();\n  };\n\n  const updateRest = (id: string, rest: any) => {\n    (async () => {\n      const headers = {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      };\n\n      await axios.put(\n        \"http://ec2-3-132-215-69.us-east-2.compute.amazonaws.com/api/v1/restaurants/\" +\n          id,\n        rest,\n        {\n          headers: headers,\n        }\n      );\n    })();\n  };\n\n  useEffect(() => {\n    (async () => {\n      const chefs = await axios(\n        \"http://ec2-3-132-215-69.us-east-2.compute.amazonaws.com/api/v1/chefs\"\n      );\n      setChefs(chefs.data);\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (!isAddMode) {\n      (async () => {\n        const res = await axios(\n          \"http://ec2-3-132-215-69.us-east-2.compute.amazonaws.com/api/v1/restaurants/\" +\n            id\n        );\n        const fields = [\"name\", \"pic\"];\n        fields.forEach((field) => setValue(field, res.data[field]));\n        setValue(\"chef\", res.data.chef.name);\n      })();\n    }\n  }, [id, isAddMode, setValue]);\n\n  return (\n    <form\n      onSubmit={handleSubmit(onSubmit)}\n      onReset={reset}\n      className=\"rest-form\"\n    >\n      <h1>{isAddMode ? \"Add Restaurant\" : \"Edit Restaurant\"}</h1>\n      <div className=\"input-container\">\n        <div>\n          <div className=\"input-field\">\n            <label>Name</label>\n            <Controller\n              name=\"name\"\n              control={control}\n              rules={{ required: true, maxLength: 20 }}\n              render={() => <Input {...register(\"name\")} />}\n            />\n          </div>\n          {errors.name && errors.name.type === \"required\" && (\n            <span role=\"alert\" className=\"input-error\">\n              Name is required\n            </span>\n          )}\n          {errors.name && errors.name.type === \"maxLength\" && (\n            <span role=\"alert\" className=\"input-error\">\n              Name length should be less than 20 characters\n            </span>\n          )}\n        </div>\n        <div>\n          <div className=\"input-field\">\n            <label>Picture</label>\n            <Controller\n              name=\"pic\"\n              control={control}\n              rules={{ required: true }}\n              render={() => <Input {...register(\"pic\")} />}\n            />\n          </div>\n          {errors.pic && errors.pic.type === \"required\" && (\n            <span role=\"alert\" className=\"input-error\">\n              Picture is required\n            </span>\n          )}\n        </div>\n        <div>\n          <div className=\"input-field\">\n            <label>Chef</label>\n            <Controller\n              name=\"chef\"\n              control={control}\n              rules={{ required: true }}\n              render={() => (\n                <Box sx={{ minWidth: 165 }}>\n                  <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">Chef</InputLabel>\n                    <Select\n                      {...register(\"chef\")}\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      label=\"Chef\"\n                    >\n                      {chefs.map((chef: any, index: number) => {\n                        return (\n                          <MenuItem value={chef} key={index}>\n                            {chef.name}\n                          </MenuItem>\n                        );\n                      })}\n                    </Select>\n                  </FormControl>\n                </Box>\n              )}\n            />\n          </div>\n          {errors.chef && errors.chef.type === \"required\" && (\n            <span role=\"alert\" className=\"input-error\">\n              Chef is required\n            </span>\n          )}\n        </div>\n      </div>\n      <div className=\"input-button-cont\">\n        <Button type=\"submit\" variant=\"contained\">\n          Save\n        </Button>\n      </div>\n    </form>\n  );\n};\n\nexport default AddEditRest;\n"]},"metadata":{},"sourceType":"module"}