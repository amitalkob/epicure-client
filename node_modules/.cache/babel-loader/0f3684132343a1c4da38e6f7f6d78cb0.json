{"ast":null,"code":"var _jsxFileName = \"/Users/amitalkobi/Projects/epicure/src/components/AddEditRest.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useLocation } from \"react-router\";\nimport Input from \"@mui/material/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddEditRest = () => {\n  _s();\n\n  const {\n    state\n  } = useLocation();\n  const id = state ? state.id : null;\n  const isAddMode = !id;\n  const {\n    control,\n    handleSubmit,\n    register,\n    reset,\n    formState\n  } = useForm({\n    defaultValues: {\n      name: \"\",\n      chefName: \"\",\n      pic: \"\",\n      dishes: \"\"\n    }\n  });\n\n  function onSubmit(data) {\n    return isAddMode ? createRest(data) : updateRest(id, data);\n  }\n\n  const createRest = data => {// return userService.create(data)\n    //     .then(() => {\n    //         alertService.success('User added', { keepAfterRouteChange: true });\n    //         history.push('.');\n    //     })\n    //     .catch(alertService.error);\n  };\n\n  const updateRest = (id, data) => {// return userService.update(id, data)\n    //     .then(() => {\n    //         alertService.success('User updated', { keepAfterRouteChange: true });\n    //         history.push('..');\n    //     })\n    //     .catch(alertService.error);\n  }; // const [user, setUser] = useState({});\n  // const [showPassword, setShowPassword] = useState(false);\n  // useEffect(() => {\n  //     if (!isAddMode) {\n  //         // get user and set form fields\n  //         userService.getById(id).then(user => {\n  //             const fields = ['title', 'firstName', 'lastName', 'email', 'role'];\n  //             fields.forEach(field => setValue(field, user[field]));\n  //             setUser(user);\n  //         });\n  //     }\n  // }, []);\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    onReset: reset,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isAddMode ? \"Add Restaurant\" : \"Edit Restaurant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"name\",\n          control: control,\n          render: () => /*#__PURE__*/_jsxDEV(Input, { ...register(\"name\", {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Chef Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"chefName\",\n          control: control,\n          render: () => /*#__PURE__*/_jsxDEV(Input, { ...register(\"chefName\", {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Picture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"pic\", {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Dishes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"dishes\", {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: formState.isSubmitting,\n        className: \"btn btn-primary\",\n        children: [formState.isSubmitting && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"spinner-border spinner-border-sm mr-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), \"Save\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddEditRest, \"I9ioyc90L6OBHE0LEISYkPTHEq4=\", false, function () {\n  return [useLocation, useForm];\n});\n\n_c = AddEditRest;\nexport default AddEditRest;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditRest\");","map":{"version":3,"sources":["/Users/amitalkobi/Projects/epicure/src/components/AddEditRest.tsx"],"names":["React","Controller","useForm","useLocation","Input","AddEditRest","state","id","isAddMode","control","handleSubmit","register","reset","formState","defaultValues","name","chefName","pic","dishes","onSubmit","data","createRest","updateRest","required","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as Yup from \"yup\";\nimport { useLocation } from \"react-router\";\nimport Input from \"@mui/material/Input\";\n\nconst AddEditRest = () => {\n  const { state } = useLocation();\n  const id = state ? state.id : null;\n  const isAddMode = !id;\n\n  const { control, handleSubmit, register, reset, formState }: any = useForm({\n    defaultValues: {\n      name: \"\",\n      chefName: \"\",\n      pic: \"\",\n      dishes: \"\",\n    },\n  });\n\n  function onSubmit(data: any) {\n    return isAddMode ? createRest(data) : updateRest(id, data);\n  }\n\n  const createRest = (data: any) => {\n    // return userService.create(data)\n    //     .then(() => {\n    //         alertService.success('User added', { keepAfterRouteChange: true });\n    //         history.push('.');\n    //     })\n    //     .catch(alertService.error);\n  };\n\n  const updateRest = (id: string, data: any) => {\n    // return userService.update(id, data)\n    //     .then(() => {\n    //         alertService.success('User updated', { keepAfterRouteChange: true });\n    //         history.push('..');\n    //     })\n    //     .catch(alertService.error);\n  };\n\n  // const [user, setUser] = useState({});\n  // const [showPassword, setShowPassword] = useState(false);\n\n  // useEffect(() => {\n  //     if (!isAddMode) {\n  //         // get user and set form fields\n  //         userService.getById(id).then(user => {\n  //             const fields = ['title', 'firstName', 'lastName', 'email', 'role'];\n  //             fields.forEach(field => setValue(field, user[field]));\n  //             setUser(user);\n  //         });\n  //     }\n  // }, []);\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} onReset={reset}>\n      <h1>{isAddMode ? \"Add Restaurant\" : \"Edit Restaurant\"}</h1>\n      <div>\n        <div>\n          <label>Name</label>\n          <Controller\n            name=\"name\"\n            control={control}\n            render={() => <Input {...register(\"name\", { required: true })} />}\n          />\n        </div>\n        <div>\n          <label>Chef Name</label>\n          <Controller\n            name=\"chefName\"\n            control={control}\n            render={() => (\n              <Input {...register(\"chefName\", { required: true })} />\n            )}\n          />\n        </div>\n        <div className=\"form-group col-5\">\n          <label>Picture</label>\n          <input {...register(\"pic\", { required: true })} />\n        </div>\n        <div>\n          <label>Dishes</label>\n          <input {...register(\"dishes\", { required: true })} />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <button\n          type=\"submit\"\n          disabled={formState.isSubmitting}\n          className=\"btn btn-primary\"\n        >\n          {formState.isSubmitting && (\n            <span className=\"spinner-border spinner-border-sm mr-1\"></span>\n          )}\n          Save\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default AddEditRest;\n"]},"metadata":{},"sourceType":"module"}