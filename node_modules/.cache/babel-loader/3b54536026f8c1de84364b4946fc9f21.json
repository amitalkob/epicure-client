{"ast":null,"code":"var _jsxFileName = \"/Users/amitalkobi/Projects/epicure/src/components/AddEdit/AddEditDish.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport Input from \"@mui/material/Input\";\nimport Button from \"@mui/material/Button\";\nimport axios from \"axios\";\nimport qs from \"querystring\";\nimport \"./AddEditRest.scss\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddEditDish = () => {\n  _s();\n\n  const id = window.location.pathname.split(\"/\")[3];\n  const isAddMode = !id;\n  const navigate = useNavigate();\n  const {\n    control,\n    handleSubmit,\n    register,\n    reset,\n    setValue,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      name: \"\",\n      text: \"\",\n      pic: \"\",\n      icons: \"\",\n      price: \"\",\n      restaurant: \"\"\n    },\n    mode: \"all\"\n  });\n\n  const onSubmit = dish => {\n    isAddMode ? createDish(dish) : updateDish(id, dish);\n    navigate(\"/admin\");\n  };\n\n  const createDish = dish => {\n    (async () => {\n      const headers = {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      };\n      await axios.post(\"http://localhost:3001/api/v1/dishes\", qs.stringify(dish), {\n        headers: headers\n      });\n    })();\n  };\n\n  const updateDish = (id, dish) => {\n    (async () => {\n      const headers = {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      };\n      await axios.put(\"http://localhost:3001/api/v1/dishes/\" + id, qs.stringify(dish), {\n        headers: headers\n      });\n    })();\n  };\n\n  useEffect(() => {\n    if (!isAddMode) {\n      (async () => {\n        const res = await axios(\"http://localhost:3001/api/v1/dishes/\" + id);\n        const fields = [\"name\", \"text\", \"pic\", \"icons\", \"price\", \"restaurant\"];\n        fields.forEach(field => setValue(field, res.data[field]));\n      })();\n    }\n  }, [id, isAddMode, setValue]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    onReset: reset,\n    className: \"rest-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isAddMode ? \"Add Dish\" : \"Edit Dish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"name\",\n            control: control,\n            rules: {\n              required: true,\n              maxLength: 20\n            },\n            render: () => /*#__PURE__*/_jsxDEV(Input, { ...register(\"name\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), errors.name && errors.name.type === \"required\" && /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"alert\",\n          className: \"input-error\",\n          children: \"Name is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), errors.name && errors.name.type === \"maxLength\" && /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"alert\",\n          className: \"input-error\",\n          children: \"Name length should be less than 20 characters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"text\",\n            control: control,\n            rules: {\n              required: true\n            },\n            render: () => /*#__PURE__*/_jsxDEV(Input, { ...register(\"text\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), errors.text && errors.text.type === \"required\" && /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"alert\",\n          className: \"input-error\",\n          children: \"Description is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Picture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"pic\",\n            control: control,\n            rules: {\n              required: true\n            },\n            render: () => /*#__PURE__*/_jsxDEV(Input, { ...register(\"pic\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), errors.pic && errors.pic.type === \"required\" && /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"alert\",\n          className: \"input-error\",\n          children: \"Picture is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Icons\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"icons\",\n            control: control,\n            render: () => /*#__PURE__*/_jsxDEV(Input, { ...register(\"icons\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"price\",\n            control: control,\n            render: () => /*#__PURE__*/_jsxDEV(Input, { ...register(\"price\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Restaurant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"restaurant\",\n            control: control,\n            render: () => /*#__PURE__*/_jsxDEV(Input, { ...register(\"restaurant\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-button-cont\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddEditDish, \"n/DRxVafI4vO3RKhjcPXEIF4//c=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c = AddEditDish;\nexport default AddEditDish;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditDish\");","map":{"version":3,"sources":["/Users/amitalkobi/Projects/epicure/src/components/AddEdit/AddEditDish.tsx"],"names":["React","useEffect","Controller","useForm","Input","Button","axios","qs","useNavigate","AddEditDish","id","window","location","pathname","split","isAddMode","navigate","control","handleSubmit","register","reset","setValue","formState","errors","defaultValues","name","text","pic","icons","price","restaurant","mode","onSubmit","dish","createDish","updateDish","headers","post","stringify","put","res","fields","forEach","field","data","required","maxLength","type"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport Input from \"@mui/material/Input\";\nimport Button from \"@mui/material/Button\";\nimport axios from \"axios\";\nimport qs from \"querystring\";\nimport \"./AddEditRest.scss\";\nimport { useNavigate } from \"react-router\";\n\nconst AddEditDish = () => {\n  const id = window.location.pathname.split(\"/\")[3];\n  const isAddMode = !id;\n  const navigate = useNavigate();\n\n  const {\n    control,\n    handleSubmit,\n    register,\n    reset,\n    setValue,\n    formState: { errors },\n  }: any = useForm({\n    defaultValues: {\n      name: \"\",\n      text: \"\",\n      pic: \"\",\n      icons: \"\",\n      price: \"\",\n      restaurant: \"\",\n    },\n    mode: \"all\",\n  });\n\n  const onSubmit = (dish: any) => {\n    isAddMode ? createDish(dish) : updateDish(id, dish);\n    navigate(\"/admin\");\n  };\n\n  const createDish = (dish: any) => {\n    (async () => {\n      const headers = {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      };\n\n      await axios.post(\n        \"http://localhost:3001/api/v1/dishes\",\n        qs.stringify(dish),\n        { headers: headers }\n      );\n    })();\n  };\n\n  const updateDish = (id: string, dish: any) => {\n    (async () => {\n      const headers = {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      };\n\n      await axios.put(\n        \"http://localhost:3001/api/v1/dishes/\" + id,\n        qs.stringify(dish),\n        { headers: headers }\n      );\n    })();\n  };\n\n  useEffect(() => {\n    if (!isAddMode) {\n      (async () => {\n        const res = await axios(\"http://localhost:3001/api/v1/dishes/\" + id);\n        const fields = [\"name\", \"text\", \"pic\", \"icons\", \"price\", \"restaurant\"];\n        fields.forEach((field) => setValue(field, res.data[field]));\n      })();\n    }\n  }, [id, isAddMode, setValue]);\n\n  return (\n    <form\n      onSubmit={handleSubmit(onSubmit)}\n      onReset={reset}\n      className=\"rest-form\"\n    >\n      <h1>{isAddMode ? \"Add Dish\" : \"Edit Dish\"}</h1>\n      <div className=\"input-container\">\n        <div>\n          <div className=\"input-field\">\n            <label>Name</label>\n            <Controller\n              name=\"name\"\n              control={control}\n              rules={{ required: true, maxLength: 20 }}\n              render={() => <Input {...register(\"name\")} />}\n            />\n          </div>\n          {errors.name && errors.name.type === \"required\" && (\n            <span role=\"alert\" className=\"input-error\">\n              Name is required\n            </span>\n          )}\n          {errors.name && errors.name.type === \"maxLength\" && (\n            <span role=\"alert\" className=\"input-error\">\n              Name length should be less than 20 characters\n            </span>\n          )}\n        </div>\n        <div>\n          <div className=\"input-field\">\n            <label>Description</label>\n            <Controller\n              name=\"text\"\n              control={control}\n              rules={{ required: true }}\n              render={() => <Input {...register(\"text\")} />}\n            />\n          </div>\n          {errors.text && errors.text.type === \"required\" && (\n            <span role=\"alert\" className=\"input-error\">\n              Description is required\n            </span>\n          )}\n        </div>\n        <div>\n          <div className=\"input-field\">\n            <label>Picture</label>\n            <Controller\n              name=\"pic\"\n              control={control}\n              rules={{ required: true }}\n              render={() => <Input {...register(\"pic\")} />}\n            />\n          </div>\n          {errors.pic && errors.pic.type === \"required\" && (\n            <span role=\"alert\" className=\"input-error\">\n              Picture is required\n            </span>\n          )}\n        </div>\n        <div>\n          <div className=\"input-field\">\n            <label>Icons</label>\n            <Controller\n              name=\"icons\"\n              control={control}\n              render={() => <Input {...register(\"icons\")} />}\n            />\n          </div>\n        </div>\n        <div>\n          <div className=\"input-field\">\n            <label>Price</label>\n            <Controller\n              name=\"price\"\n              control={control}\n              render={() => <Input {...register(\"price\")} />}\n            />\n          </div>\n        </div>\n        <div>\n          <div className=\"input-field\">\n            <label>Restaurant</label>\n            <Controller\n              name=\"restaurant\"\n              control={control}\n              render={() => <Input {...register(\"restaurant\")} />}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"input-button-cont\">\n        <Button type=\"submit\" variant=\"contained\">\n          Save\n        </Button>\n      </div>\n    </form>\n  );\n};\n\nexport default AddEditDish;\n"]},"metadata":{},"sourceType":"module"}