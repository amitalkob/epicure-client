{"ast":null,"code":"var _jsxFileName = \"/Users/amitalkobi/Projects/epicure/src/components/AddEditRest.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddEditRest = _ref => {\n  _s();\n\n  var _errors$firstName, _errors$lastName, _errors$lastName2, _errors$lastName3;\n\n  let {\n    history,\n    match\n  } = _ref;\n  const {\n    id\n  } = match.params;\n  const isAddMode = !id; // form validation rules\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required(\"Name is required\"),\n    chefName: Yup.string().required(\"Chef Name is required\"),\n    pic: Yup.string().required(\"Picture is required\"),\n    dishes: Yup.string().required(\"Dishes are required\")\n  }); // functions to build form returned by useForm() hook\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    setValue,\n    getValues,\n    errors,\n    formState\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n\n  function onSubmit(data) {\n    return isAddMode ? createRest(data) : updateRest(id, data);\n  }\n\n  const createRest = data => {// return userService.create(data)\n    //     .then(() => {\n    //         alertService.success('User added', { keepAfterRouteChange: true });\n    //         history.push('.');\n    //     })\n    //     .catch(alertService.error);\n  };\n\n  const updateRest = (id, data) => {// return userService.update(id, data)\n    //     .then(() => {\n    //         alertService.success('User updated', { keepAfterRouteChange: true });\n    //         history.push('..');\n    //     })\n    //     .catch(alertService.error);\n  }; // const [user, setUser] = useState({});\n  // const [showPassword, setShowPassword] = useState(false);\n  // useEffect(() => {\n  //     if (!isAddMode) {\n  //         // get user and set form fields\n  //         userService.getById(id).then(user => {\n  //             const fields = ['title', 'firstName', 'lastName', 'email', 'role'];\n  //             fields.forEach(field => setValue(field, user[field]));\n  //             setUser(user);\n  //         });\n  //     }\n  // }, []);\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    onReset: reset,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isAddMode ? \"Add Restaurant\" : \"Edit Restaurant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"name\",\n          type: \"text\",\n          ref: register,\n          className: `form-control ${errors.name ? \"is-invalid\" : \"\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Chef Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"chefName\",\n          type: \"text\",\n          ref: register,\n          className: `form-control ${errors.chefName ? \"is-invalid\" : \"\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$lastName = errors.lastName) === null || _errors$lastName === void 0 ? void 0 : _errors$lastName.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Picture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"pic\",\n          type: \"text\",\n          ref: register,\n          className: `form-control ${errors.pic ? \"is-invalid\" : \"\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$lastName2 = errors.lastName) === null || _errors$lastName2 === void 0 ? void 0 : _errors$lastName2.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Dishes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"dishes\",\n          type: \"text\",\n          ref: register,\n          className: `form-control ${errors.dishes ? \"is-invalid\" : \"\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$lastName3 = errors.lastName) === null || _errors$lastName3 === void 0 ? void 0 : _errors$lastName3.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: formState.isSubmitting,\n        className: \"btn btn-primary\",\n        children: [formState.isSubmitting && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"spinner-border spinner-border-sm mr-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), \"Save\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: isAddMode ? \".\" : \"..\",\n        className: \"btn btn-link\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddEditRest, \"p0rTqxYr9rUCXIzknkeqeYhEjg8=\", false, function () {\n  return [useForm];\n});\n\n_c = AddEditRest;\nexport default AddEditRest;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditRest\");","map":{"version":3,"sources":["/Users/amitalkobi/Projects/epicure/src/components/AddEditRest.tsx"],"names":["React","Link","useForm","yupResolver","Yup","AddEditRest","history","match","id","params","isAddMode","validationSchema","object","shape","name","string","required","chefName","pic","dishes","register","handleSubmit","reset","setValue","getValues","errors","formState","resolver","onSubmit","data","createRest","updateRest","firstName","message","lastName","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as Yup from \"yup\";\n\nconst AddEditRest = ({ history, match }: any) => {\n  const { id } = match.params;\n  const isAddMode = !id;\n\n  // form validation rules\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required(\"Name is required\"),\n    chefName: Yup.string().required(\"Chef Name is required\"),\n    pic: Yup.string().required(\"Picture is required\"),\n    dishes: Yup.string().required(\"Dishes are required\"),\n  });\n\n  // functions to build form returned by useForm() hook\n  const {\n    register,\n    handleSubmit,\n    reset,\n    setValue,\n    getValues,\n    errors,\n    formState,\n  }: any = useForm({\n    resolver: yupResolver(validationSchema),\n  });\n\n  function onSubmit(data: any) {\n    return isAddMode ? createRest(data) : updateRest(id, data);\n  }\n\n  const createRest = (data: any) => {\n    // return userService.create(data)\n    //     .then(() => {\n    //         alertService.success('User added', { keepAfterRouteChange: true });\n    //         history.push('.');\n    //     })\n    //     .catch(alertService.error);\n  };\n\n  const updateRest = (id: string, data: any) => {\n    // return userService.update(id, data)\n    //     .then(() => {\n    //         alertService.success('User updated', { keepAfterRouteChange: true });\n    //         history.push('..');\n    //     })\n    //     .catch(alertService.error);\n  };\n\n  // const [user, setUser] = useState({});\n  // const [showPassword, setShowPassword] = useState(false);\n\n  // useEffect(() => {\n  //     if (!isAddMode) {\n  //         // get user and set form fields\n  //         userService.getById(id).then(user => {\n  //             const fields = ['title', 'firstName', 'lastName', 'email', 'role'];\n  //             fields.forEach(field => setValue(field, user[field]));\n  //             setUser(user);\n  //         });\n  //     }\n  // }, []);\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} onReset={reset}>\n      <h1>{isAddMode ? \"Add Restaurant\" : \"Edit Restaurant\"}</h1>\n      <div className=\"form-row\">\n        <div className=\"form-group col-5\">\n          <label>Name</label>\n          <input\n            name=\"name\"\n            type=\"text\"\n            ref={register}\n            className={`form-control ${errors.name ? \"is-invalid\" : \"\"}`}\n          />\n          <div className=\"invalid-feedback\">{errors.firstName?.message}</div>\n        </div>\n        <div className=\"form-group col-5\">\n          <label>Chef Name</label>\n          <input\n            name=\"chefName\"\n            type=\"text\"\n            ref={register}\n            className={`form-control ${errors.chefName ? \"is-invalid\" : \"\"}`}\n          />\n          <div className=\"invalid-feedback\">{errors.lastName?.message}</div>\n        </div>\n        <div className=\"form-group col-5\">\n          <label>Picture</label>\n          <input\n            name=\"pic\"\n            type=\"text\"\n            ref={register}\n            className={`form-control ${errors.pic ? \"is-invalid\" : \"\"}`}\n          />\n          <div className=\"invalid-feedback\">{errors.lastName?.message}</div>\n        </div>\n        <div className=\"form-group col-5\">\n          <label>Dishes</label>\n          <input\n            name=\"dishes\"\n            type=\"text\"\n            ref={register}\n            className={`form-control ${errors.dishes ? \"is-invalid\" : \"\"}`}\n          />\n          <div className=\"invalid-feedback\">{errors.lastName?.message}</div>\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <button\n          type=\"submit\"\n          disabled={formState.isSubmitting}\n          className=\"btn btn-primary\"\n        >\n          {formState.isSubmitting && (\n            <span className=\"spinner-border spinner-border-sm mr-1\"></span>\n          )}\n          Save\n        </button>\n        <Link to={isAddMode ? \".\" : \"..\"} className=\"btn btn-link\">\n          Cancel\n        </Link>\n      </div>\n    </form>\n  );\n};\n\nexport default AddEditRest;\n"]},"metadata":{},"sourceType":"module"}