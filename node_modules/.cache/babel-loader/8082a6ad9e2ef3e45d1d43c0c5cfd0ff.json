{"ast":null,"code":"var _jsxFileName = \"/Users/amitalkobi/Projects/epicure/src/components/AddEditRest.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as Yup from \"yup\";\nimport { useLocation } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddEditRest = () => {\n  _s();\n\n  var _formState$errors$nam, _formState$errors$che, _formState$errors$pic, _formState$errors$dis;\n\n  const {\n    state\n  } = useLocation();\n  const id = state ? state.id : null;\n  const isAddMode = !id; // form validation rules\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required(\"Name is required\"),\n    chefName: Yup.string().required(\"Chef Name is required\"),\n    pic: Yup.string().required(\"Picture is required\"),\n    dishes: Yup.string().required(\"Dishes are required\")\n  }); // functions to build form returned by useForm() hook\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    setValue,\n    getValues,\n    formState\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n\n  function onSubmit(data) {\n    return isAddMode ? createRest(data) : updateRest(id, data);\n  }\n\n  const createRest = data => {// return userService.create(data)\n    //     .then(() => {\n    //         alertService.success('User added', { keepAfterRouteChange: true });\n    //         history.push('.');\n    //     })\n    //     .catch(alertService.error);\n  };\n\n  const updateRest = (id, data) => {// return userService.update(id, data)\n    //     .then(() => {\n    //         alertService.success('User updated', { keepAfterRouteChange: true });\n    //         history.push('..');\n    //     })\n    //     .catch(alertService.error);\n  }; // const [user, setUser] = useState({});\n  // const [showPassword, setShowPassword] = useState(false);\n  // useEffect(() => {\n  //     if (!isAddMode) {\n  //         // get user and set form fields\n  //         userService.getById(id).then(user => {\n  //             const fields = ['title', 'firstName', 'lastName', 'email', 'role'];\n  //             fields.forEach(field => setValue(field, user[field]));\n  //             setUser(user);\n  //         });\n  //     }\n  // }, []);\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    onReset: reset,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isAddMode ? \"Add Restaurant\" : \"Edit Restaurant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"name\", {\n            required: true\n          }),\n          className: `form-control ${formState.errors.name ? \"is-invalid\" : \"\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_formState$errors$nam = formState.errors.name) === null || _formState$errors$nam === void 0 ? void 0 : _formState$errors$nam.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Chef Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"chefName\", {\n            required: true\n          }),\n          className: `form-control ${formState.errors.chefName ? \"is-invalid\" : \"\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_formState$errors$che = formState.errors.chefName) === null || _formState$errors$che === void 0 ? void 0 : _formState$errors$che.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Picture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"pic\", {\n            required: true\n          }),\n          className: `form-control ${formState.errors.pic ? \"is-invalid\" : \"\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_formState$errors$pic = formState.errors.pic) === null || _formState$errors$pic === void 0 ? void 0 : _formState$errors$pic.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Dishes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"dishes\", {\n            required: true\n          }),\n          className: `form-control ${formState.errors.dishes ? \"is-invalid\" : \"\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_formState$errors$dis = formState.errors.dishes) === null || _formState$errors$dis === void 0 ? void 0 : _formState$errors$dis.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: formState.isSubmitting,\n        className: \"btn btn-primary\",\n        children: [formState.isSubmitting && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"spinner-border spinner-border-sm mr-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), \"Save\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: isAddMode ? \".\" : \"..\",\n        className: \"btn btn-link\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddEditRest, \"ziVL5gK1+Gbax0vApzHWJw8CnTE=\", false, function () {\n  return [useLocation, useForm];\n});\n\n_c = AddEditRest;\nexport default AddEditRest;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditRest\");","map":{"version":3,"sources":["/Users/amitalkobi/Projects/epicure/src/components/AddEditRest.tsx"],"names":["React","Link","useForm","yupResolver","Yup","useLocation","AddEditRest","state","id","isAddMode","validationSchema","object","shape","name","string","required","chefName","pic","dishes","register","handleSubmit","reset","setValue","getValues","formState","resolver","onSubmit","data","createRest","updateRest","errors","message","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as Yup from \"yup\";\nimport { useLocation } from \"react-router\";\n\nconst AddEditRest = () => {\n  const { state } = useLocation();\n  const id = state ? state.id : null;\n  const isAddMode = !id;\n\n  // form validation rules\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required(\"Name is required\"),\n    chefName: Yup.string().required(\"Chef Name is required\"),\n    pic: Yup.string().required(\"Picture is required\"),\n    dishes: Yup.string().required(\"Dishes are required\"),\n  });\n\n  // functions to build form returned by useForm() hook\n  const { register, handleSubmit, reset, setValue, getValues, formState }: any =\n    useForm({\n      resolver: yupResolver(validationSchema),\n    });\n\n  function onSubmit(data: any) {\n    return isAddMode ? createRest(data) : updateRest(id, data);\n  }\n\n  const createRest = (data: any) => {\n    // return userService.create(data)\n    //     .then(() => {\n    //         alertService.success('User added', { keepAfterRouteChange: true });\n    //         history.push('.');\n    //     })\n    //     .catch(alertService.error);\n  };\n\n  const updateRest = (id: string, data: any) => {\n    // return userService.update(id, data)\n    //     .then(() => {\n    //         alertService.success('User updated', { keepAfterRouteChange: true });\n    //         history.push('..');\n    //     })\n    //     .catch(alertService.error);\n  };\n\n  // const [user, setUser] = useState({});\n  // const [showPassword, setShowPassword] = useState(false);\n\n  // useEffect(() => {\n  //     if (!isAddMode) {\n  //         // get user and set form fields\n  //         userService.getById(id).then(user => {\n  //             const fields = ['title', 'firstName', 'lastName', 'email', 'role'];\n  //             fields.forEach(field => setValue(field, user[field]));\n  //             setUser(user);\n  //         });\n  //     }\n  // }, []);\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} onReset={reset}>\n      <h1>{isAddMode ? \"Add Restaurant\" : \"Edit Restaurant\"}</h1>\n      <div className=\"form-row\">\n        <div className=\"form-group col-5\">\n          <label>Name</label>\n          <input\n            {...register(\"name\", { required: true })}\n            className={`form-control ${\n              formState.errors.name ? \"is-invalid\" : \"\"\n            }`}\n          />\n          <div className=\"invalid-feedback\">\n            {formState.errors.name?.message}\n          </div>\n        </div>\n        <div className=\"form-group col-5\">\n          <label>Chef Name</label>\n          <input\n            {...register(\"chefName\", { required: true })}\n            className={`form-control ${\n              formState.errors.chefName ? \"is-invalid\" : \"\"\n            }`}\n          />\n          <div className=\"invalid-feedback\">\n            {formState.errors.chefName?.message}\n          </div>\n        </div>\n        <div className=\"form-group col-5\">\n          <label>Picture</label>\n          <input\n            {...register(\"pic\", { required: true })}\n            className={`form-control ${\n              formState.errors.pic ? \"is-invalid\" : \"\"\n            }`}\n          />\n          <div className=\"invalid-feedback\">\n            {formState.errors.pic?.message}\n          </div>\n        </div>\n        <div className=\"form-group col-5\">\n          <label>Dishes</label>\n          <input\n            {...register(\"dishes\", { required: true })}\n            className={`form-control ${\n              formState.errors.dishes ? \"is-invalid\" : \"\"\n            }`}\n          />\n          <div className=\"invalid-feedback\">\n            {formState.errors.dishes?.message}\n          </div>\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <button\n          type=\"submit\"\n          disabled={formState.isSubmitting}\n          className=\"btn btn-primary\"\n        >\n          {formState.isSubmitting && (\n            <span className=\"spinner-border spinner-border-sm mr-1\"></span>\n          )}\n          Save\n        </button>\n        <Link to={isAddMode ? \".\" : \"..\"} className=\"btn btn-link\">\n          Cancel\n        </Link>\n      </div>\n    </form>\n  );\n};\n\nexport default AddEditRest;\n"]},"metadata":{},"sourceType":"module"}