{"ast":null,"code":"var _jsxFileName = \"/Users/amitalkobi/GitHub/epicure-client/src/pages/RegisterPage/RegisterPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./RegisterPage.scss\";\nimport axios from \"axios\";\nimport qs from \"querystring\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterPage = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    (async () => {\n      const headers = {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      };\n      const details = {\n        name: name,\n        email: email,\n        password: password\n      };\n      const res = await axios.post(\"http://localhost:3001/api/v1/users/register\", qs.stringify(details), {\n        headers: headers\n      });\n      setMessage(res.data.type);\n      console.log(res);\n\n      if (message === \"\") {\n        navigate(\"/\");\n      }\n    })();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Register to Epicure\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Full Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"name\",\n        id: \"name\",\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"E-Mail: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"login-button\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterPage, \"gPQQhjRVdtZWI/B8WtLl3fVHDWQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = RegisterPage;\nexport default RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"sources":["/Users/amitalkobi/GitHub/epicure-client/src/pages/RegisterPage/RegisterPage.tsx"],"names":["useState","axios","qs","useNavigate","RegisterPage","name","setName","email","setEmail","password","setPassword","message","setMessage","navigate","handleSubmit","event","preventDefault","headers","details","res","post","stringify","data","type","console","log","e","target","value"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport \"./RegisterPage.scss\";\nimport axios from \"axios\";\nimport qs from \"querystring\";\nimport { useNavigate } from \"react-router\";\n\nconst RegisterPage = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleSubmit = (event: any) => {\n    event.preventDefault();\n    (async () => {\n      const headers = {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      };\n\n      const details = {\n        name: name,\n        email: email,\n        password: password,\n      };\n      const res = await axios.post(\n        \"http://localhost:3001/api/v1/users/register\",\n        qs.stringify(details),\n        { headers: headers }\n      );\n      setMessage(res.data.type);\n      console.log(res);\n      if (message === \"\") {\n        navigate(\"/\");\n      }\n    })();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"login-form\">\n      <h3>Register to Epicure</h3>\n      <div className=\"login-input\">\n        <label htmlFor=\"email\">Full Name: </label>\n        <input\n          type=\"name\"\n          id=\"name\"\n          onChange={(e) => setName(e.target.value)}\n        />\n      </div>\n      <div className=\"login-input\">\n        <label htmlFor=\"email\">E-Mail: </label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </div>\n      <div className=\"login-input\">\n        <label htmlFor=\"password\">Password: </label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </div>\n      <button className=\"login-button\">Register</button>\n    </form>\n  );\n};\n\nexport default RegisterPage;\n"]},"metadata":{},"sourceType":"module"}