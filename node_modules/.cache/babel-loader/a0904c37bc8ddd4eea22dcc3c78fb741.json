{"ast":null,"code":"var _jsxFileName = \"/Users/amitalkobi/Projects/epicure/src/components/PicContainer/PicContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport DishModal from \"../DishModal/DishModal\";\nimport { useState } from \"react\";\nimport \"./PicContainer.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PicContainer = _ref => {\n  _s();\n\n  let {\n    type,\n    pic,\n    title,\n    text,\n    icons,\n    price,\n    id\n  } = _ref;\n  const navigate = useNavigate();\n  const containerClass = type + \"-container\";\n  const pictureClass = type + \"-picture\";\n  const titleClass = type + \"-title\";\n  const textClass = type + \"-text\";\n  const infoClass = type + \"-info\";\n  const priceClass = type + \"-price\";\n  const lineClass = type + \"-line\";\n  const picClass = type + \"-pic\";\n  const iconsClass = type + \"-icons\";\n  const cropClass = type + \"-crop\";\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleClick = () => {\n    if (type === \"rest\" || type === \"rest-carusel\" || type === \"rest-home\") {\n      navigate(`/restaurants/${id}`);\n    } else {\n      setIsOpen(true); //return <DishModal id={id} open={true} />;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: containerClass,\n    onClick: handleClick,\n    children: [isOpen && /*#__PURE__*/_jsxDEV(DishModal, {\n      id: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cropClass,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: pic,\n        alt: \"pic\",\n        className: pictureClass\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: titleClass,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: textClass,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), icons && price && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: infoClass,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: iconsClass,\n        children: icons.map(icon => {\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            src: icon,\n            alt: \"icon\",\n            className: picClass\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: priceClass,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: lineClass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), price, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: lineClass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PicContainer, \"ceGBOeuRCqrr/U+S6OCxyH9+zMA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = PicContainer;\nexport default PicContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PicContainer\");","map":{"version":3,"sources":["/Users/amitalkobi/Projects/epicure/src/components/PicContainer/PicContainer.tsx"],"names":["React","useNavigate","DishModal","useState","PicContainer","type","pic","title","text","icons","price","id","navigate","containerClass","pictureClass","titleClass","textClass","infoClass","priceClass","lineClass","picClass","iconsClass","cropClass","isOpen","setIsOpen","handleClick","map","icon"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport DishModal from \"../DishModal/DishModal\";\nimport { useState } from \"react\";\n\nimport \"./PicContainer.scss\";\n\ntype Props = {\n  type: string;\n  pic: string;\n  title: string;\n  text: string;\n  icons: string[];\n  price: string;\n  id: number;\n};\n\nconst PicContainer: React.FC<Props> = ({\n  type,\n  pic,\n  title,\n  text,\n  icons,\n  price,\n  id,\n}) => {\n  const navigate = useNavigate();\n  const containerClass = type + \"-container\";\n  const pictureClass = type + \"-picture\";\n  const titleClass = type + \"-title\";\n  const textClass = type + \"-text\";\n  const infoClass = type + \"-info\";\n  const priceClass = type + \"-price\";\n  const lineClass = type + \"-line\";\n  const picClass = type + \"-pic\";\n  const iconsClass = type + \"-icons\";\n  const cropClass = type + \"-crop\";\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleClick = () => {\n    if (type === \"rest\" || type === \"rest-carusel\" || type === \"rest-home\") {\n      navigate(`/restaurants/${id}`);\n    } else {\n      setIsOpen(true);\n      //return <DishModal id={id} open={true} />;\n    }\n  };\n\n  return (\n    <div className={containerClass} onClick={handleClick}>\n      {isOpen && <DishModal id={id} />}\n      <div className={cropClass}>\n        <img src={pic} alt=\"pic\" className={pictureClass} />\n      </div>\n      <div className={titleClass}>{title}</div>\n      <div className={textClass}>{text}</div>\n      {icons && price && (\n        <div className={infoClass}>\n          <div className={iconsClass}>\n            {icons.map((icon) => {\n              return <img src={icon} alt=\"icon\" className={picClass} />;\n            })}\n          </div>\n          <div className={priceClass}>\n            <div className={lineClass} />\n            {price}\n            <div className={lineClass} />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PicContainer;\n"]},"metadata":{},"sourceType":"module"}