{"ast":null,"code":"import React from\"react\";import ReactDOM from\"react-dom\";import\"./index.css\";import App from\"./App\";import axios from\"axios\";import{Navigate}from\"react-router\";// For GET requests\nimport{jsx as _jsx}from\"react/jsx-runtime\";axios.interceptors.request.use(function(req){req.headers.authorization=localStorage.Token;return req;},function(err){return Promise.reject(err);});// For POST requests\naxios.interceptors.response.use(function(res){return res;},function(err){if(err.response.type===\"400\"){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});}throw err;});ReactDOM.render(/*#__PURE__*/_jsx(App,{}),document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/amitalkobi/Projects/epicure/src/index.tsx"],"names":["React","ReactDOM","App","axios","Navigate","interceptors","request","use","req","headers","authorization","localStorage","Token","err","Promise","reject","response","res","type","render","document","getElementById"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAO,aAAP,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,cAAzB,CAEA;2CACAD,KAAK,CAACE,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACE,SAACC,GAAD,CAAc,CACZA,GAAG,CAACC,OAAJ,CAAYC,aAAZ,CAA4BC,YAAY,CAACC,KAAzC,CACA,MAAOJ,CAAAA,GAAP,CACD,CAJH,CAKE,SAACK,GAAD,CAAS,CACP,MAAOC,CAAAA,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP,CACD,CAPH,EAUA;AACAV,KAAK,CAACE,YAAN,CAAmBW,QAAnB,CAA4BT,GAA5B,CACE,SAACU,GAAD,QAASA,CAAAA,GAAT,EADF,CAEE,SAACJ,GAAD,CAAS,CACP,GAAIA,GAAG,CAACG,QAAJ,CAAaE,IAAb,GAAsB,KAA1B,CAAiC,CAC/B,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAC,QAAb,EAAP,CACD,CACD,KAAML,CAAAA,GAAN,CACD,CAPH,EAUAZ,QAAQ,CAACkB,MAAT,cAAgB,KAAC,GAAD,IAAhB,CAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport axios from \"axios\";\nimport { Navigate } from \"react-router\";\n\n// For GET requests\naxios.interceptors.request.use(\n  (req: any) => {\n    req.headers.authorization = localStorage.Token;\n    return req;\n  },\n  (err) => {\n    return Promise.reject(err);\n  }\n);\n\n// For POST requests\naxios.interceptors.response.use(\n  (res) => res,\n  (err) => {\n    if (err.response.type === \"400\") {\n      return <Navigate to=\"/login\" />;\n    }\n    throw err;\n  }\n);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}