{"ast":null,"code":"var _jsxFileName = \"/Users/amitalkobi/GitHub/epicure-client/src/pages/RestaurantPage.tsx\",\n    _s = $RefreshSig$();\n\nimport Restaurant from \"../components/Restaurants/Restaurant\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useLocation } from \"react-router\";\nimport qs from \"querystring\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RestaurantPage = () => {\n  _s();\n\n  const {\n    state\n  } = useLocation();\n  const isDesktopScreen = useMediaQuery({\n    query: \"(min-width: 600px)\"\n  });\n  const [restaurant, setRestaurant] = useState();\n  const [dishes, setDishes] = useState([]);\n  useEffect(() => {\n    (async () => {\n      const rest = await axios(\"http://localhost:3001/api/v1/restaurants/\" + state.id);\n      setRestaurant(rest.data);\n      const headers = {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      };\n      const dishes = await axios.post(\"http://localhost:3001/api/v1/dishes/get-dishes-by-rest\", qs.stringify({\n        restId: state.id\n      }), {\n        headers: headers\n      });\n      setDishes(dishes.data);\n    })();\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(Restaurant, {\n    rest: restaurant,\n    dishes: dishes,\n    isDesktop: isDesktopScreen\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RestaurantPage, \"oi6PrGvxOraAU9VLUuBAR7s36bc=\", false, function () {\n  return [useLocation, useMediaQuery];\n});\n\n_c = RestaurantPage;\nexport default RestaurantPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantPage\");","map":{"version":3,"sources":["/Users/amitalkobi/GitHub/epicure-client/src/pages/RestaurantPage.tsx"],"names":["Restaurant","useMediaQuery","useEffect","useState","axios","useLocation","qs","RestaurantPage","state","isDesktopScreen","query","restaurant","setRestaurant","dishes","setDishes","rest","id","data","headers","post","stringify","restId"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,sCAAvB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,EAAP,MAAe,aAAf;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAYH,WAAW,EAA7B;AACA,QAAMI,eAAe,GAAGR,aAAa,CAAC;AAAES,IAAAA,KAAK,EAAE;AAAT,GAAD,CAArC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,EAA5C;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAM,EAAN,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX,YAAMa,IAAI,GAAG,MAAMX,KAAK,CACtB,8CAA8CI,KAAK,CAACQ,EAD9B,CAAxB;AAGAJ,MAAAA,aAAa,CAACG,IAAI,CAACE,IAAN,CAAb;AAEA,YAAMC,OAAO,GAAG;AACd,wBAAgB;AADF,OAAhB;AAIA,YAAML,MAAM,GAAG,MAAMT,KAAK,CAACe,IAAN,CACnB,wDADmB,EAEnBb,EAAE,CAACc,SAAH,CAAa;AAAEC,QAAAA,MAAM,EAAEb,KAAK,CAACQ;AAAhB,OAAb,CAFmB,EAGnB;AAAEE,QAAAA,OAAO,EAAEA;AAAX,OAHmB,CAArB;AAKAJ,MAAAA,SAAS,CAACD,MAAM,CAACI,IAAR,CAAT;AACD,KAhBD;AAiBD,GAlBQ,EAkBN,CAACT,KAAD,CAlBM,CAAT;AAoBA,sBACE,QAAC,UAAD;AAAY,IAAA,IAAI,EAAEG,UAAlB;AAA8B,IAAA,MAAM,EAAEE,MAAtC;AAA8C,IAAA,SAAS,EAAEJ;AAAzD;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CA7BD;;GAAMF,c;UACcF,W,EACMJ,a;;;KAFpBM,c;AA+BN,eAAeA,cAAf","sourcesContent":["import Restaurant from \"../components/Restaurants/Restaurant\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useLocation } from \"react-router\";\nimport qs from \"querystring\";\n\nconst RestaurantPage = () => {\n  const { state } = useLocation();\n  const isDesktopScreen = useMediaQuery({ query: \"(min-width: 600px)\" });\n  const [restaurant, setRestaurant] = useState<any>();\n  const [dishes, setDishes] = useState<any>([]);\n\n  useEffect(() => {\n    (async () => {\n      const rest = await axios(\n        \"http://localhost:3001/api/v1/restaurants/\" + state.id\n      );\n      setRestaurant(rest.data);\n\n      const headers = {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      };\n\n      const dishes = await axios.post(\n        \"http://localhost:3001/api/v1/dishes/get-dishes-by-rest\",\n        qs.stringify({ restId: state.id }),\n        { headers: headers }\n      );\n      setDishes(dishes.data);\n    })();\n  }, [state]);\n\n  return (\n    <Restaurant rest={restaurant} dishes={dishes} isDesktop={isDesktopScreen} />\n  );\n};\n\nexport default RestaurantPage;\n"]},"metadata":{},"sourceType":"module"}